import React, { useState } from "react";
import MarkdownIt from "markdown-it";
import { Tooltip } from "@material-ui/core";
import classes from "./Editor.module.css";
const mdParser = new MarkdownIt();

const Editor = (props) => {
  const [text, setText] = useState("");
  return (
    <div className={classes.Editor}>
      <div className={classes.nav}>
        {buttons.map((item) => (
          <Tooltip key={item.text} arrow title={item.toltip}>
            <button
              className={classes.navButton}
              onClick={() => {
                setText(`${text}${item.style}`);
              }}
            >
              {item.text}
            </button>
          </Tooltip>
        ))}
      </div>
      <div className={classes.edit_view}>
        <div className={classes.textarea}>
          <textarea
            rows="10"
            placeholder="–ù–∞—á–Ω–∏—Ç–µ –ø–∏—Å–∞—Ç—å..."
            value={text}
            onChange={(e) => {
              setText(e.target.value);
              props.update(
                e.target.value.replace(/\n/g, "   \n"),
                mdParser.render(e.target.value.replace(/\n/g, "   \n")),
                "hide"
              );
            }}
          />
        </div>
        <div
          className={classes.view}
          dangerouslySetInnerHTML={{
            __html: mdParser.render(text.replace(/\n/g, "   \n")),
          }}
        />
      </div>
    </div>
  );
};
const buttons = [
  { text: "ùë∞", toltip: "–ö—É—Ä—Å–∏–≤", style: "*–∫—É—Ä—Å–∏–≤*" },
  { text: "ùêÅ", toltip: "–ü–æ–ª—É–∂–∏—Ä–Ω—ã–π", style: "**–ø–æ–ª—É–∂–∏—Ä–Ω—ã–π**" },
  { text: "H1", toltip: "–ó–∞–≥–æ–ª–æ–≤–æ–∫1", style: "# –ó–∞–≥–æ–ª–æ–≤–æ–∫1" },
  { text: "H2", toltip: "–ó–∞–≥–æ–ª–æ–≤–æ–∫2", style: "## –ó–∞–≥–æ–ª–æ–≤–æ–∫2" },
  { text: "‚Ä¢", toltip: "–ú–∞—Ä–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫", style: "* —Å–ø–∏—Å–æ–∫" },
  { text: "1.", toltip: "–ù—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫", style: "1. —Å–ø–∏—Å–æ–∫" },
];

export default Editor;
